---
import { Icon } from "astro-icon/components";

interface NavLink {
  url: string;
  name: string;
}

// hold state of the menu
let isOpen = false;

// variable declaration
const { navLinks }: { navLinks: NavLink[] } = Astro.props as {
  navLinks: NavLink[];
};
// var pathname = new URL(Astro.request.url).pathname;
---

<div class="p-4 text-4xl md:hidden">
  <Icon id="nav-open" name="line-md:menu" />
</div>

<!-- Mobile modal menu -->
<div
  id="modal"
  class="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm items-center justify-center z-30 hidden"
>
  <div
    id="modal-content"
    class="bg-ctp-crust p-8 rounded-lg shadow-lg z-40 w-full m-auto"
  >
    <button id="nav-close" class="absolute text-ctp-red top-4 right-4">
      &times;
    </button>
    <nav class="flex flex-col space-y-4">
      {
        navLinks.map((link) => (
          <div class="flex flex-row align-middle items-center">
            <a
              class={`text-ctp-text no-underline px-2 lg:prose-lg hover:text-ctp-teal duration-150s cursor-default transition-all`}
              href={link.url}
            >
              {link.name}
            </a>
          </div>
        ))
      }
    </nav>
  </div>
</div>

<script>
  function createHamburgerListeners() {
    const modal = document.querySelector("#modal");
    const navOpen = document.querySelector("#nav-open");
    const navClose = document.querySelector("#nav-close");
    const navLinks = document.querySelectorAll("#modal nav a");

    if (navOpen) {
      navOpen.addEventListener("click", () => {
        console.log("clicked nav open");
        if (modal) {
          modal.classList.remove("hidden");
          console.log("removed hidden class");
        }
      });
    }

    if (navClose) {
      navClose.addEventListener("click", () => {
        console.log("clicked nav closed");
        if (modal) {
          modal.classList.add("hidden");
          console.log("added hidden class");
        }
      });
    }

    if (modal) {
      modal.addEventListener("click", (e) => {
        if (e.target === modal) {
          modal.classList.add("hidden");
        }
      });
    }
  }

  function updateActiveLink() {
    const pathname = window.location.pathname;
    const links = document.querySelectorAll('#modal nav a');

    links.forEach(link => {
      const dot = link.previousElementSibling;
      if (link.getAttribute('href') === pathname) {
        if (!dot) {
          const newDot = document.createElement('span');
          newDot.classList.add('bg-ctp-green', 'w-2', 'h-2', 'rounded-full', 'relative', 'left-2', 'mr-2');
          newDot.setAttribute('transition:persist', 'active');
          if (link.parentElement) {
            link.parentElement.insertBefore(newDot, link);
          }
        }
      } else {
        if (dot) {
          dot.remove();
        }
      }
    });
  }

  createHamburgerListeners();
  document.addEventListener("astro:page-load", updateActiveLink);
  document.addEventListener("astro:page-load", createHamburgerListeners);
</script>

<style>
  .active {
    color: #74c7ec !important;
  }
  .active::before {
    color: #cba6f7;
    content: "[";
  }
  .active::after {
    color: #cba6f7;
    content: "]";
  }
</style>
