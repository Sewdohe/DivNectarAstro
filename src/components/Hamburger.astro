---
import { Icon } from 'astro-icon/components'
let isOpen = false

function toggleMenu() {
  isOpen = !isOpen
  const modal = document.querySelector('#modal')
  if (modal) {
    if (isOpen) {
      modal.classList.remove('hidden')
    } else {
      modal.classList.add('hidden')
    }
  }
}

interface NavLink {
    url: string;
    name: string;
}

const { navLinks }: { navLinks: NavLink[] } = Astro.props as { navLinks: NavLink[] }

const pathname = new URL(Astro.request.url).pathname;

---

<div class="p-4 text-4xl md:hidden">
    <Icon id="nav-open" name="line-md:menu" />
</div>

<!-- Mobile modal menu -->
<div id="modal" class="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm flex items-center justify-center z-30 hidden">
    <div id="modal-content" class="bg-ctp-crust p-8 rounded-lg shadow-lg z-40 w-full max-w-md relative">
        <button id="nav-close" class="absolute text-ctp-red top-4 right-4">
            &times;
        </button>
        <nav class="flex flex-col space-y-4">
            {
                navLinks.map((link) => (
                    <a
                        class={`${pathname === link.url ? "active" : ""} text-ctp-text no-underline px-2 lg:prose-lg hover:text-ctp-teal duration-150s cursor-default transition-all`}
                        href={link.url}
                    >
                        {link.name}
                    </a>
                ))
            }
        </nav>
    </div>
</div>

<script>
    function createHamburgerListeners() {
        const modal = document.querySelector('#modal');
        const navOpen = document.querySelector('#nav-open');
        const navClose = document.querySelector('#nav-close');
        const navLinks = document.querySelectorAll('#modal nav a');

        if (navOpen) {
            navOpen.addEventListener('click', () => {
                if (modal) {
                    modal.classList.remove('hidden');
                }
            });
        }

        if (navClose) {
            navClose.addEventListener('click', () => {
                if (modal) {
                    modal.classList.add('hidden');
                }
            });
        }

        navLinks.forEach(link => {
            link.addEventListener('click', () => {
                if (modal) {
                    modal.classList.add('hidden');
                }
            });
        });
    }

    createHamburgerListeners();
    document.addEventListener('astro:beforeload', createHamburgerListeners);
</script>

<style>
    .active {
        color: #74c7ec !important;
    }
    .active::before {
        color: #cba6f7;
        content: '[';
    }
    .active::after {
        color: #cba6f7;
        content: ']';
    }
</style>