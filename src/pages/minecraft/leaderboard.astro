---
import axios from "axios";
import Layout from "../../layouts/Layout.astro";
import { getLeaderboard } from "../../db/queries";
import { Image } from "astro:assets";

import islandImage from "../../assets/icons/island.png";
import bankImage from "../../assets/icons/bank.png";
import goldBarsImage from "../../assets/icons/goldbars.png";
import chipImage from "../../assets/icons/chip.png";
import expOrbAnimatedImage from "../../assets/icons/exp-orb-animated.webp";

const islandLeaderboard = await getLeaderboard("superior_island_worth");
const coinsLeaderboard = await getLeaderboard("coinsengine_balance_raw_coin");
const playertimeLeaderboard = await getLeaderboard("shortcut_playertime");
const rpgLevelLeaderboard = await getLeaderboard("mmocore_level");
const fishingLeaderboard = await getLeaderboard("shortcut_fishing");
const bankLeaderboard = await getLeaderboard("bankplus_balance_long");
const damageDealtLeaderboard = await getLeaderboard("shortcut_damage_dealt");
const enchantingLeaderboard = await getLeaderboard("shortcut_enchanting");
const vegasWinningsLeaderboard = await getLeaderboard("vegas_won_balance");

console.log(islandLeaderboard);

function ticksToTimeFormat(ticks: number) {
  // Minecraft tick rate: 20 ticks per second
  const secondsInTick = 1 / 20;

  // Convert ticks to total seconds (1 tick = 1/20 of a second)
  const totalSeconds = ticks / 20;

  // Convert to days, hours
  const days = Math.floor(totalSeconds / (24 * 3600));
  const hours = Math.floor((totalSeconds % (24 * 3600)) / 3600);

  // Format the time into a readable string
  let timeString = "";

  if (days > 0) timeString += `${days} day${days > 1 ? "s" : ""} `;
  if (hours > 0) timeString += `${hours} hour${hours > 1 ? "s" : ""} `;

  return timeString.trim();
}

function formatToUSD(value: number) {
  return value.toLocaleString("en-US", {
    style: "currency",
    currency: "USD",
  });
}

const formatter = new Intl.NumberFormat("en-US", {
  style: "currency",
  currency: "USD",

  // These options can be used to round to whole numbers.
  trailingZeroDisplay: "stripIfInteger", // This is probably what most people
  // want. It will only stop printing
  // the fraction when the input
  // amount is a round number (int)
  // already. If that's not what you
  // need, have a look at the options
  // below.
  //minimumFractionDigits: 0, // This suffices for whole numbers, but will
  // print 2500.10 as $2,500.1
  //maximumFractionDigits: 0, // Causes 2500.99 to be printed as $2,501
});
---

<Layout
  title="SkyNectar Leaderboard"
  direction="col"
  description="SkyNectar Leaderboard"
  class="items-center"
>
  <div>
    <h2 class="text-5xl bg-ctp-crust py-2 page-divider-wavy text-center w-full font-extrabold text-ctp-yellow">
      Leaderboards
    </h2>
  </div>
  <div class="flex flex-col flex-wrap md:flex-row md:justify-center mt-3">
    <div class="mx-4">
      <div class="flex justify-around items-center">
        <h2 class="text-2xl font-extrabold text-ctp-peach text-center">
          Island Worth
        </h2><Image src={islandImage} height={32} alt="island worth" />
      </div>
      {
        islandLeaderboard.map((row, index) => (
          <div class="flex bg-ctp-mantle p-2 m-2 rounded-md flex-col items-center">
            <div class="flex items-center">
              <span class="text-3xl mr-1 font-extrabold">#{index + 1}: </span>
              <span class="text-xl">{row.playername}</span>
              <img
                src={`https://mc-heads.net/avatar/${row.id}/64`}
                alt="player head"
                class="h-5 w-5 ml-2"
              />
            </div>
            <div class="flex">
              <span class="text-ctp-green text-xl font-extrabold">
                {formatter.format(row.value)}
              </span>
            </div>
          </div>
        ))
      }
    </div>
    <div class="mx-4">
      <div class="flex justify-around items-center">
        <h2 class="text-2xl font-extrabold text-ctp-peach text-center">
          Coins
        </h2><Image src={bankImage} height={32} alt="coins" />
      </div>
      {
        coinsLeaderboard.map((row, index) => (
          <div class="flex bg-ctp-mantle p-2 m-2 rounded-md flex-col items-center">
            <div class="flex items-center">
              <span class="text-3xl mr-1 font-extrabold">#{index + 1}: </span>
              <span class="text-xl">{row.playername}</span>
              <img
                src={`https://mc-heads.net/avatar/${row.id}/64`}
                alt="player head"
                class="h-5 w-5 ml-2"
              />
            </div>
            <div class="flex">
              <span class="text-ctp-green text-xl font-extrabold">
                {formatter.format(row.value)}
              </span>
            </div>
          </div>
        ))
      }
    </div>
    <div class="mx-4">
      <div class="flex justify-around items-center">
        <h2 class="text-2xl font-extrabold text-ctp-peach text-center">
          Bank Balance
        </h2><Image src={goldBarsImage} height={32} alt="bank" />
      </div>
      {
        bankLeaderboard.map((row, index) => (
          <div class="flex bg-ctp-mantle p-2 m-2 rounded-md flex-col items-center">
            <div class="flex items-center">
              <span class="text-3xl mr-1 font-extrabold">#{index + 1}: </span>
              <span class="text-xl">{row.playername}</span>
              <img
                src={`https://mc-heads.net/avatar/${row.id}/64`}
                alt="player head"
                class="h-5 w-5 ml-2"
              />
            </div>
            <div class="flex">
              <span class="text-ctp-green text-xl font-extrabold">
                {formatter.format(row.value)}
              </span>
            </div>
          </div>
        ))
      }
    </div>
    <div class="mx-4">
      <div class="flex justify-around items-center">
        <h2 class="text-2xl font-extrabold text-ctp-peach text-center">
          Vegas Winnings
        </h2><Image src={chipImage} height={16} alt="bank" />
      </div>
      {
        vegasWinningsLeaderboard.map((row, index) => (
          <div class="flex bg-ctp-mantle p-2 m-2 rounded-md flex-col items-center">
            <div class="flex items-center">
              <span class="text-3xl mr-1 font-extrabold">#{index + 1}: </span>
              <span class="text-xl">{row.playername}</span>
              <img
                src={`https://mc-heads.net/avatar/${row.id}/64`}
                alt="player head"
                class="h-5 w-5 ml-2"
              />
            </div>
            <div class="flex">
              <span class="text-ctp-green text-xl font-extrabold">
                {formatter.format(row.value)}
              </span>
            </div>
          </div>
        ))
      }
    </div>
    <div class="mx-4">
      <div class="flex justify-around items-center">
        <h2 class="text-2xl font-extrabold text-ctp-peach text-center">
          Play-Time
        </h2><div class="icon-32 ml-4 clock"></div>
      </div>
      {
        playertimeLeaderboard.map((row, index) => (
          <div class="flex bg-ctp-mantle p-2 m-2 rounded-md flex-col items-center">
            <div class="flex items-center">
              <span class="text-3xl mr-1 font-extrabold">#{index + 1}: </span>
              <span class="text-xl">{row.playername}</span>
              <img
                src={`https://mc-heads.net/avatar/${row.id}/64`}
                alt="player head"
                class="h-5 w-5 ml-2"
              />
            </div>
            <div class="flex">
              <span class="text-ctp-green text-xl font-extrabold">
                {ticksToTimeFormat(row.value)}
              </span>
            </div>
          </div>
        ))
      }
    </div>
    <div class="mx-4">
      <div class="flex justify-around items-center">
        <h2 class="text-2xl font-extrabold text-ctp-peach text-center">
          RPG-Level
        </h2><Image src={expOrbAnimatedImage} height={32} alt="island worth" />
      </div>
      {
        rpgLevelLeaderboard.map((row, index) => (
          <div class="flex bg-ctp-mantle p-2 m-2 rounded-md flex-col items-center">
            <div class="flex items-center">
              <span class="text-3xl mr-1 font-extrabold">#{index + 1}: </span>
              <span class="text-xl">{row.playername}</span>
              <img
                src={`https://mc-heads.net/avatar/${row.id}/64`}
                alt="player head"
                class="h-5 w-5 ml-2"
              />
            </div>
            <div class="flex">
              <span class="text-ctp-green text-xl font-extrabold">
                Level {Math.floor(row.value)}
              </span>
            </div>
          </div>
        ))
      }
    </div>
    <div class="mx-4">
      <div class="flex justify-around items-center">
        <h2 class="text-2xl font-extrabold text-ctp-peach text-center">
          Fish Caught
        </h2><div class="icon-32 ml-4 fishing-rod"></div>
      </div>
      {
        fishingLeaderboard.map((row, index) => (
          <div class="flex bg-ctp-mantle p-2 m-2 rounded-md flex-col items-center">
            <div class="flex items-center">
              <span class="text-3xl mr-1 font-extrabold">#{index + 1}: </span>
              <span class="text-xl">{row.playername}</span>
              <img
                src={`https://mc-heads.net/avatar/${row.id}/64`}
                alt="player head"
                class="h-5 w-5 ml-2"
              />
            </div>
            <div class="flex">
              <span class="text-ctp-green text-xl font-extrabold">
                {Math.floor(row.value)} Fish
              </span>
            </div>
          </div>
        ))
      }
    </div>
  </div>
</Layout>
