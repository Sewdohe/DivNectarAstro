---
import type { PlayerData } from "../../db/interfaces";
import { getPlayerData, getLandsOwnedByPlayer } from "../../db/queries";
import Layout from "../../layouts/Layout.astro";
import Card from "../../components/Card.astro";
import { GET as getUser } from "../../pages/api/oauth/get-user";
import ProfileJSONLD from "../../components/ProfileJSONLD.astro";

import moment from "moment";
import PlayerSkillChip from "../../components/PlayerSkillChip.astro";

const { playerId } = Astro.params;
const players = await getPlayerData();
const player: PlayerData = players.find((p) => p.uuid === playerId)!;

interface Player {
  uuid: string;
  username: string;
}

function timePassedSince(epochTimestamp: string): string {
  // @ts-ignore
  return moment(parseInt(epochTimestamp)).fromNow();
}

const userId = Astro.cookies.get("userId")?.value ?? "0";
let user = null;

if (userId !== "0") {
  const response = await getUser({
    request: new Request(`http://localhost/api/oauth/get-user?id=${userId}`),
  });
  //@ts-ignore
  user = await response.json();
}

async function displayPlayerLands(uuid: string) {
  try {
    const ownedLands = await getLandsOwnedByPlayer(uuid);

    if (ownedLands.length > 0) {
      console.log(`Lands owned by ${uuid}:`);
      ownedLands.forEach(land => {
        console.log(`- ${land.landName} (ULID: ${land.landUlid})`);
      });
    } else {
      console.log(`No lands found for player ${uuid}.`);
    }
  } catch (error) {
    console.error('Failed to retrieve player lands:', error);
  }
}

player.lands = await getLandsOwnedByPlayer(player.uuid);
// console.log(player)

export const prerender = false;
---

<Layout
  title={`${player.username}'s Skyblock Profile'`}
  description={`view ${player.username}'s skyblock stats.`}
  image={{
    url: `https://mc-heads.net/body/${player.uuid}`,
    alt: `${player.name}'s avatar`,
  }}
>
  <ProfileJSONLD {...player} />
  <div class="flex w-full flex-col justify-center align-middle items-center">
    <img
      class="object-contain rounded-lg h-48 md:w-48 md:rounded-none md:rounded-s-lg"
      src={`https://mc-heads.net/body/${player.uuid}`}
      alt=""
    />
    <div
      class="flex flex-col w-full md:w-fit justify-between p-4 leading-normal"
    >
      <h2
        class="mb-0 text-2xl md:text-4xl self-center font-extrabold tracking-tight text-gray-900 dark:text-white"
      >
        {player.name}
      </h2>
      <span class="mt-0 text-ctp-subtext0 text-sm self-center mb-6"
        >Last seen {timePassedSince(player.lastPlayed.toString())}</span
      >
      {
        user != null && user.minecraft_uuid === player.uuid ? (
          <div id="profile-controls" class="flex flex-col my-6 p-4">
            <Card direction="col">
              <h1 class="text-3xl font-extrabold">Hello, {user.name}</h1>
            </Card>
          </div>
        ) : null
      }
      <h3
        class="text-ctp-green mb-4 text-center text-4xl md:text-6xl font-extrabold"
      >
        Stats
      </h3>
      <div class="w-full text-4xl flex justify-center mb-4">
        <span class="font-extrabold text-ctp-sapphire">Power Level:</span><span class="ml-3 font-bold">{player.powerLevel}</span>
      </div>
      <div
        id="player-stats-container"
        class="grid justify-self-center px-8 md:px-4 w-full grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3"
      >
        <PlayerSkillChip icon="crossbow" skill={player.archeryLevel} skillName="Archery" />
        <PlayerSkillChip icon="water-bottle" skill={player.alchemyLevel} skillName="Alchemy" />
        <PlayerSkillChip icon="diamond-shovel" skill={player.diggingLevel} skillName="Digging" />
        <PlayerSkillChip icon="enchanting-table" skill={player.enchantingLevel} skillName="Enchanting" />
        <PlayerSkillChip icon="diamond-hoe" skill={player.farmingLevel} skillName="Farming" />
        <PlayerSkillChip icon="fishing-rod" skill={player.fishingLevel} skillName="Fishing" />
        <PlayerSkillChip icon="iron-chestplate" skill={player.heavyArmorLevel} skillName="Heavy Armor" />
        <PlayerSkillChip icon="diamond-axe" skill={player.heavyWeaponsLevel} skillName="Heavy Weapons" />
        <PlayerSkillChip icon="leather-tunic" skill={player.lightArmorLevel} skillName="Light Armor" />
        <PlayerSkillChip icon="diamond-sword" skill={player.lightWeaponsLevel} skillName="Light Weapons" />
        <PlayerSkillChip icon="diamond-pickaxe" skill={player.miningLevel} skillName="Mining" />
        <PlayerSkillChip icon="anvil" skill={player.smithingLevel} skillName="Smithing" />
        <PlayerSkillChip icon="oak-log" skill={player.woodcuttingLevel} skillName="Woodcutting" />

      </div>
    </div>
    <h3
      class="text-ctp-yellow mb-4 text-center text-4xl md:text-6xl font-extrabold"
    >
      Lands
    </h3>
    <div id="lands-container" class="flex flex-row">
      {player.lands!.map(land => (
        <div class="p-4 m-1 bg-ctp-crust flex align-center rounded-lg land-card select-none cursor-pointer"
            data-world={land.world} data-x={land.x} data-y={land.y} data-z={land.z}>
          <span class="text-xl font-bold">{land.landName}</span>
        </div>
      ))}
    </div>
    <div id="map-container" class="w-full h-[100vh] rounded-md"></div>
  </div>
  <div id="map-container"></div>
</Layout>

<script define:vars={{ player }}>
  const mapContainer = document.getElementById("map-container");

  const landCards = document.getElementsByClassName("land-card");
  console.log(landCards);

  for (let landCard of landCards) {
    landCard?.addEventListener("click", () => {
      console.log('added eventlister')
      let world = landCard.dataset.world;
      let x = landCard.dataset.x;
      let y = landCard.dataset.y;
      let z = landCard.dataset.z;

      if (mapContainer?.innerHTML === "") {
        const iframe = document.createElement("iframe");
        iframe.id = "player-map";
        iframe.className = "w-full h-[100vh] rounded-md";
        iframe.src = `https://map.divnectar.com/#${world}:${x}:${y}:${z}:25:0:0:0:0:flat`;
        mapContainer.appendChild(iframe);
      } else {
        mapContainer.innerHTML = "";
      }
    });
  }
</script>
